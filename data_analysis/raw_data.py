# Copyright 2024 Simon Vetter
# 
# This file is part of Stereophonic Calculator.
# 
# Stereophonic Calculator is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
# 
# Stereophonic Calculator is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with Stereophonic
# Calculator. If not, see <https://www.gnu.org/licenses/>.

import numpy as np



# Primary data points
# Half recording angle, microphone angle, microphone distance
data = np.array([
#	 HRA	MA		MD
	# ±30° line
	[30,	71.3,	50.0],
	[30,	80,		47.7],
	[30,	90,		45.2],
	[30,	100,	42.6],
	[30,	110,	40.1],
	[30,	120,	37.6],
	[30,	130,	35.0],
	[30,	140,	32.2],
	[30,	150,	29.4],
	[30,	160,	26.4],
	[30,	170,	23.2],
	[30,	180,	19.9],
	# ±40° line
	[40,	20,		49.7],
	[40,	30,		45.9],
	[40,	40,		42.7],
	[40,	50,		39.8],
	[40,	60,		37.1],
	[40,	70,		34.6],
	[40,	80,		32.3],
	[40,	90,		29.8],
	[40,	100,	27.3],
	[40,	110,	24.9],
	[40,	120,	22.4],
	[40,	130,	19.7],
	[40,	140,	17.0],
	[40,	150,	14.0],
	[40,	160,	11.0],
	[40,	170,	7.8],
	[40,	180,	4.6],
	# ±50° line
	[50,	0,		49.8],
	[50,	10,		44.2],
	[50,	20,		39.9],
	[50,	30,		36.2],
	[50,	40,		33.1],
	[50,	50,		30.4],
	[50,	60,		27.8],
	[50,	70,		25.4],
	[50,	80,		22.9],
	[50,	90,		20.5],
	[50,	100,	18.0],
	[50,	110,	15.4],
	[50,	120,	12.8],
	[50,	130,	10.1],
	[50,	140,	7.2],
	[50,	150,	4.3],
	[50,	160,	1.4],
	[50,	164.7,	0.0],
	# ±60° line
	[60,	0,		43.9],
	[60,	10,		38.1],
	[60,	20,		33.8],
	[60,	30,		30.1],
	[60,	40,		27.1],
	[60,	50,		24.3],
	[60,	60,		21.7],
	[60,	70,		19.1],
	[60,	80,		16.6],
	[60,	90,		13.9],
	[60,	100,	11.3],
	[60,	110,	8.6],
	[60,	120,	5.8],
	[60,	130,	3.0],
	[60,	140,	0.3],
	# ±70° line
	[70,	0,		40.4],
	[70,	10,		34.2],
	[70,	20,		29.6],
	[70,	30,		25.9],
	[70,	40,		22.8],
	[70,	50,		20.1],
	[70,	60,		17.2],
	[70,	70,		14.4],
	[70,	80,		11.6],
	[70,	90,		8.8],
	[70,	100,	5.9],
	[70,	110,	3.1],
	[70,	120,	0.3],
	# ±80° line
	[80,	0,		38.7],
	[80,	10,		31.7],
	[80,	20,		26.8],
	[80,	30,		23.0],
	[80,	40,		19.7],
	[80,	50,		16.5],
	[80,	60,		13.5],
	[80,	70,		10.3],
	[80,	80,		7.2],
	[80,	90,		4.1],
	[80,	100,	1.0],
	[80,	103.6,	0.0],
	# ±90° line
	[90,	0,		38.2],
	[90,	10,		30.1],
	[90,	20,		24.9],
	[90,	30,		20.8],
	[90,	40,		17.1],
	[90,	50,		13.5],
	[90,	60,		9.9],
	[90,	70,		6.4],
	[90,	80,		2.9],
	[90,	88.7,	0.0]
])



# Angular distortion
data_angular_distortion = np.array([
#	 MD		MA		AD
	# on ±90° line
	[6.43,	70.0,	5],
	[14.65,	47.0,	5],
	[20.47,	30.8,	6],
	[24.14,	21.8,	7],
	[27.92,	14.1,	8],
	[33.77,	5.1,	9],
	# on ±80° line
	[1.43,	98.9,	6],
	[9.79,	71.7,	5],
	[18.83,	42.9,	5],
	[23.47,	29.0,	6],
	[27.30,	19.1,	7],
	[31.16,	11.1,	8],
	[37.95,	0.7,	9],
	# on ±70° line
	[3.96,	107.0,	6],
	[11.4,	80.9,	5],
	[23.24,	38.9,	5],
	[27.10,	26.9,	6],
	[30.93,	16.9,	7],
	[35.41,	8.0,	8],
	# on ±60° line
	[6.16,	118.8,	6],
	[12.97,	93.8,	5],
	[28.07,	36.6,	5],
	[31.94,	24.7,	6],
	[35.92,	14.8,	7],
	[40.39,	6.1,	8],
	# on ±50° line
	[0.82,	162.0,	7],
	[8.41,	135.7,	6],
	[15.25,	110.6,	5],
	[26.93,	63.7,	4],
	[33.85,	37.6,	5],
	[37.73,	25.9,	6],
	[42.46,	13.8,	7],
	[48.04,	3.0,	8],
	# on ±40° line
	[11.39,	158.8,	6],
	[18.38,	134.9,	5],
	[26.20,	104.6,	4],
	[35.97,	64.5,	4],
	[42.46,	40.8,	5],
	[47.08,	26.8,	6],
	# on ±30° line
	[23.89,	168.0,	5],
	[33.16,	136.8,	4],
	[49.34,	73.9,	4]
])



# Reverb borders
upper_reverb_border = np.array(120)
data_lower_reverb_border = np.array([
	[0,		44.3],
	[10,	35.9],
	[20,	29.4],
	[30,	24.3],
	[40,	19.6],
	[50,	14.9],
	[60,	9.7],
	[70,	4.2],
	[77.3,	0.0]
])
